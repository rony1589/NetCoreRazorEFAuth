// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MusicRadio.Infrastructure.Data;

#nullable disable

namespace MusicRadio.Infrastructure.Migrations
{
    [DbContext(typeof(MusicRadioDbContext))]
    [Migration("20250526165327_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MusicRadio.Core.Entities.AlbumSet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("Precio")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("AlbumSet", (string)null);
                });

            modelBuilder.Entity("MusicRadio.Core.Entities.Client", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Direction")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Mail")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("Role_Id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Role_Id");

                    b.ToTable("Client", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "12345",
                            Direction = "Edificio Music Radico",
                            Mail = "admininventario@music.com",
                            Name = "Admin Inventario",
                            Password = "A6xnQhbz4Vx2HuGl4lXwZ5U2I8iziLRFnhP5eNfIRvQ=",
                            Phone = "3105588986",
                            Role_Id = 2
                        });
                });

            modelBuilder.Entity("MusicRadio.Core.Entities.PurchaseDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Album_Id")
                        .HasColumnType("int");

                    b.Property<string>("Client_Id")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("Album_Id");

                    b.HasIndex("Client_Id");

                    b.ToTable("PurchaseDetail", (string)null);
                });

            modelBuilder.Entity("MusicRadio.Core.Entities.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Role", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Cliente"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Director Inventario"
                        });
                });

            modelBuilder.Entity("MusicRadio.Core.Entities.SongSet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Album_Id")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Album_Id");

                    b.ToTable("SongSet", (string)null);
                });

            modelBuilder.Entity("MusicRadio.Core.Entities.Client", b =>
                {
                    b.HasOne("MusicRadio.Core.Entities.Role", "Role")
                        .WithMany("Clients")
                        .HasForeignKey("Role_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("MusicRadio.Core.Entities.PurchaseDetail", b =>
                {
                    b.HasOne("MusicRadio.Core.Entities.AlbumSet", "AlbumSet")
                        .WithMany("PurchaseDetails")
                        .HasForeignKey("Album_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MusicRadio.Core.Entities.Client", "Client")
                        .WithMany("PurchaseDetails")
                        .HasForeignKey("Client_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AlbumSet");

                    b.Navigation("Client");
                });

            modelBuilder.Entity("MusicRadio.Core.Entities.SongSet", b =>
                {
                    b.HasOne("MusicRadio.Core.Entities.AlbumSet", "AlbumSet")
                        .WithMany("SongSets")
                        .HasForeignKey("Album_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AlbumSet");
                });

            modelBuilder.Entity("MusicRadio.Core.Entities.AlbumSet", b =>
                {
                    b.Navigation("PurchaseDetails");

                    b.Navigation("SongSets");
                });

            modelBuilder.Entity("MusicRadio.Core.Entities.Client", b =>
                {
                    b.Navigation("PurchaseDetails");
                });

            modelBuilder.Entity("MusicRadio.Core.Entities.Role", b =>
                {
                    b.Navigation("Clients");
                });
#pragma warning restore 612, 618
        }
    }
}
